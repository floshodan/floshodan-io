{
  "cacheItemsMap": {
    "posts/How-XOR-actually-works.mdx": {
      "document": {
        "title": "How Bitwise XOR works",
        "date": "2023-02-28T00:00:00.000Z",
        "summary": "Advent Of Code Day 01 in x86 Assembly language",
        "image": "/images/backend/og.png",
        "body": {
          "raw": "\n## Advent of code in Assembly\n\nIn case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\n",
          "code": "var Component=(()=>{var l=Object.create;var o=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),p=(n,e)=>{for(var a in e)o(n,a,{get:e[a],enumerable:!0})},c=(n,e,a,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of f(e))!u.call(n,s)&&s!==a&&o(n,s,{get:()=>e[s],enumerable:!(i=h(e,s))||i.enumerable});return n};var x=(n,e,a)=>(a=n!=null?l(g(n)):{},c(e||!n||!n.__esModule?o(a,\"default\",{value:n,enumerable:!0}):a,n)),y=n=>c(o({},\"__esModule\",{value:!0}),n);var d=b((O,r)=>{r.exports=_jsx_runtime});var w={};p(w,{default:()=>v,frontmatter:()=>j});var t=x(d()),j={title:\"How Bitwise XOR works\",date:\"2023-02-28\",summary:\"Advent Of Code Day 01 in x86 Assembly language\",image:\"/images/backend/og.png\"};function m(n){let e=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h2,{id:\"advent-of-code-in-assembly\",children:[(0,t.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advent-of-code-in-assembly\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Advent of code in Assembly\"]}),`\n`,(0,t.jsx)(e.p,{children:\"In case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\"})]})}function _(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(m,n)})):m(n)}var v=_;return y(w);})();\n;return Component;"
        },
        "_id": "posts/How-XOR-actually-works.mdx",
        "_raw": {
          "sourceFilePath": "posts/How-XOR-actually-works.mdx",
          "sourceFileName": "How-XOR-actually-works.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/How-XOR-actually-works"
        },
        "type": "Post",
        "readingTime": {
          "text": "1 min read",
          "minutes": 0.155,
          "time": 9300,
          "words": 31
        },
        "slug": "posts/How-XOR-actually-works",
        "slugAsParams": "How-XOR-actually-works",
        "url": "/posts/posts/How-XOR-actually-works",
        "slugs": "posts/How-XOR-actually-works"
      },
      "documentHash": "1676988268505",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/advent-of-code-assembly copy.mdx": {
      "document": {
        "title": "How I bloated my personal website",
        "date": "2023-02-28T00:00:00.000Z",
        "summary": "Advent Of Code Day 01 in x86 Assembly language",
        "image": "/images/backend/og.png",
        "body": {
          "raw": "\n## Advent of code in Assembly\n\nIn case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\n",
          "code": "var Component=(()=>{var l=Object.create;var o=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),p=(n,e)=>{for(var a in e)o(n,a,{get:e[a],enumerable:!0})},c=(n,e,a,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of f(e))!u.call(n,s)&&s!==a&&o(n,s,{get:()=>e[s],enumerable:!(i=h(e,s))||i.enumerable});return n};var x=(n,e,a)=>(a=n!=null?l(g(n)):{},c(e||!n||!n.__esModule?o(a,\"default\",{value:n,enumerable:!0}):a,n)),y=n=>c(o({},\"__esModule\",{value:!0}),n);var d=b((C,r)=>{r.exports=_jsx_runtime});var w={};p(w,{default:()=>v,frontmatter:()=>j});var t=x(d()),j={title:\"How I bloated my personal website\",date:\"2023-02-28\",summary:\"Advent Of Code Day 01 in x86 Assembly language\",image:\"/images/backend/og.png\"};function m(n){let e=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h2,{id:\"advent-of-code-in-assembly\",children:[(0,t.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advent-of-code-in-assembly\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Advent of code in Assembly\"]}),`\n`,(0,t.jsx)(e.p,{children:\"In case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\"})]})}function _(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(m,n)})):m(n)}var v=_;return y(w);})();\n;return Component;"
        },
        "_id": "posts/advent-of-code-assembly copy.mdx",
        "_raw": {
          "sourceFilePath": "posts/advent-of-code-assembly copy.mdx",
          "sourceFileName": "advent-of-code-assembly copy.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/advent-of-code-assembly copy"
        },
        "type": "Post",
        "readingTime": {
          "text": "1 min read",
          "minutes": 0.155,
          "time": 9300,
          "words": 31
        },
        "slug": "posts/advent-of-code-assembly copy",
        "slugAsParams": "advent-of-code-assembly copy",
        "url": "/posts/posts/advent-of-code-assembly copy",
        "slugs": "posts/advent-of-code-assembly copy"
      },
      "documentHash": "1676987886458",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/advent-of-code-assembly.mdx": {
      "document": {
        "title": "Advent of Code in Assembly",
        "date": "2022-12-03T00:00:00.000Z",
        "summary": "Advent Of Code Day 01 in x86 Assembly language",
        "image": "blog4.jpg",
        "featured": "true",
        "body": {
          "raw": "\nI think the Advent of Code challenges are a wonderful opportunity to experiment with new programming languages. As I have been trying to learn more about operating systems and the low level operations of computers, I thought it would be an interesting exercise to try to complete some of the Advent of Code 2020 challenges in x86-64 assembly on Linux.\n\n## Preface\n\nthis is a[Link text Here](https://link-url-here.org)\n\nI will be going through my assembly solution to the Advent of Code 2020 Day 01 challenge. Along the way, I will attempt to explain what assembly is, why it is important, and how the code works.\n\nI expect that you will already have some experience with programming. This doesn't have to be low level programming or assembly or anything like that, although that would help tremendously. If you have a decent amount of experience in programming languages such as Python or Javascript, you may have to follow along slowly, but you should hopefully be able to understand the code.\n\nIf you would like to follow along with me, you will need\n\n- the nasm x86 assembler\n- the gcc compiler\n- the make build tool\n- I leave the installation of these tools to you.\n\n## GDB\n\nWhile optional, I would recommend you also install the gdb debugger. This was invaluable to me when writing this post, as my code would frequently crash or justs not work. Using gdb is outside the scope of this post, but there are plenty of guides online. If you do decide to use gdb, I would recommending using layout asm, layout regs, and set disassembly-flavor intel; this will display the register values and assembly code in Intel syntax in separate windows. You may find it annoying to type these commands in at the start of every debugging session, in which case you can copy the following into .gdbinit in your home directory:\n\n```bash\nset auto-load safe-path /\nset disassembly-flavor intel\n\nlayout regs\nlayout asm\n```\n\n# Introduction\n\nTo execute a program, your CPU accepts machine code instructions. These are raw bytes that instruct the CPU to perform one of the low level operations it knows how to do -- such as access memory, perform basic arithmetic, move data into registers, etc.\n\nWhile programmers did write raw machine code in some of the earliest days in computing, almost no one writes raw machine code today. Machine code is incredibly difficult for humans to read, write, and understand because it is merely a sequence of numbers encoded in binary that is sent to the CPU. Imagine encoding the English alphabet with the numbers 1-26 and trying to write a paper using those numbers in place of letters. While it is possible, it would take an exorbitant amount of time and likely be fraught with errors.\n\nThese early computer scientists soon developed assembly as an abstraction on top of machine code. Instead of writing the sequence of numbers that would encode machine code instructions, code would be written with text that humans could better read and understand. Each line would encode one instruction and any arguments that instruction would accept. Labels were also added so that code could refer to certain parts of the program in a simple way, allowing programmers to more easily implement loops, functions, conditional statements, etc.\n\nHowever, assembly cannot be executed by the CPU -- the CPU can only execute machine code. Thus, assembly must be assembled into machine code by an assembler. An assembler is essentially a compiler from assembly to machine code. This machine code can then be sent to the CPU and executed.\n\nAs assembly is only a light abstraction over machine code, it is highly processor-specific and low level. That means that assembly code must take certain features of the CPU into account to work properly, such as the architecture, registers, addressing modes, data types, and more.\n\nWe will be writing code for the x86 architecture, targeting CPUs with 64 bit registers. This is usually succinctly described as x86-64 assembly code.\n\nFurthermore, as we are not writing assembly for a bare metal application, we rely on interfacing with the operating system to perform many operations, such as opening, reading from, writing to, and closing files. The interface to perform these operations through the operating system are operating system specific, so we will be targeting Linux in this article.\n\n# Assembly Basics\n\nWe will first review some preliminary aspects of assembly code that are required to read or write any assembly.\n\n## registers\n\nMuch of assembly code performs operations with registers. Registers are small memory locations within the CPU that store the data that the CPU performs operations on. For instance, when performing an add operation, one of the operands must be CPU register that the CPU will save the final sum to.\n\nCPU registers are typically either 8 bit, 16 bit, 32 bit, or 64 bit. Most modern desktop processors today are 64 bit, and as stated before, we are writing 64 bit assembly code.\n\nThese registers are all referred to with special, and somewhat confusing, names in assembly code.\n\nThe table here lists all of the x86-64 registers.\n\nNote that although these registers are 64 bit, you can specifically access smaller portions of the registers. For example, here are all of the subparts of the 64 bit rax register:\n\n- `rax`: the full 64 bit register\n- `eax` : the lower 32 bits of `rax`\n- `ax` : the lowest 16 bits of `rax`\n- `ah` : the upper 8 bits of `ax`\n- `al` : the lower 8 bits of `ax` / the lowest 8 bits of `rax` You can find all of these names, as well as the names of the other registers, in the link above.\n- `Note` that you cannot access the highest 32 bits of `rax` nor the highest 16 bits of eax directly. You can compute their values using bit operations, but their values cannot be accessed directly.\n\nWe can move data into registers with the mov class of instructions.\n\n```asm\nmov rax, 0xdeadbeef ; move the number 0xdeadbeef into rax\nmov eax, 42         ; move the number 42 into eax, the lower 32 bits of rax\nmov ax, 0xff        ; move the number 0xff into ax, the lowest 16 bits of rax\nmov ah, 0xf         ; move the number 0xf into ah, the high 8 bits of ax\nmov al, 0xa         ; move the number 0xa into al, the low 8 bits of ax\n```\n\n## Instructions\n\nWe should now discuss instructions.\n\nEvery line of an assembly program encodes exactly one assembly instruction. An instruction is an one operation that a CPU executes. Most instructions additionally take one or more operands, which are arguments that specify the operation of the instruction. For instance, the mov instruction showed above takes a register as its first operand and a number as its second operand. This encodes the operation of moving the number into the register. There are different forms of many instructions, however, that accept different operands; for instance, each line above is a different form of mov, as it accepts a different size of register. This means that the machine code number of the mov instruction is different on each line. Thus, each form of an instruction is encoded by a different number in machine code.\n\nWe do not have to worry too much about the different forms of instructions and their machine code numbers to write simple assembly code, thankfully. Just be aware that there are many assembly instructions and each instruction can take none, one, or more operands.\n\nThe mov instruction discussed above, generally, moves data from a source to a destination of equal size in the form mov [dest] [src].\n",
          "code": "var Component=(()=>{var d=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var o in e)s(t,o,{get:e[o],enumerable:!0})},r=(t,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of p(e))!y.call(t,a)&&a!==o&&s(t,a,{get:()=>e[a],enumerable:!(i=m(e,a))||i.enumerable});return t};var g=(t,e,o)=>(o=t!=null?d(u(t)):{},r(e||!t||!t.__esModule?s(o,\"default\",{value:t,enumerable:!0}):o,t)),w=t=>r(s({},\"__esModule\",{value:!0}),t);var c=f((F,l)=>{l.exports=_jsx_runtime});var A={};b(A,{default:()=>v,frontmatter:()=>B});var n=g(c()),B={title:\"Advent of Code in Assembly\",date:\"2022-12-03\",summary:\"Advent Of Code Day 01 in x86 Assembly language\",image:\"blog4.jpg\",featured:\"true\"};function h(t){let e=Object.assign({p:\"p\",h2:\"h2\",a:\"a\",span:\"span\",ul:\"ul\",li:\"li\",div:\"div\",pre:\"pre\",code:\"code\",h1:\"h1\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"I think the Advent of Code challenges are a wonderful opportunity to experiment with new programming languages. As I have been trying to learn more about operating systems and the low level operations of computers, I thought it would be an interesting exercise to try to complete some of the Advent of Code 2020 challenges in x86-64 assembly on Linux.\"}),`\n`,(0,n.jsxs)(e.h2,{id:\"preface\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#preface\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Preface\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"this is a\",(0,n.jsx)(e.a,{href:\"https://link-url-here.org\",children:\"Link text Here\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"I will be going through my assembly solution to the Advent of Code 2020 Day 01 challenge. Along the way, I will attempt to explain what assembly is, why it is important, and how the code works.\"}),`\n`,(0,n.jsx)(e.p,{children:\"I expect that you will already have some experience with programming. This doesn't have to be low level programming or assembly or anything like that, although that would help tremendously. If you have a decent amount of experience in programming languages such as Python or Javascript, you may have to follow along slowly, but you should hopefully be able to understand the code.\"}),`\n`,(0,n.jsx)(e.p,{children:\"If you would like to follow along with me, you will need\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"the nasm x86 assembler\"}),`\n`,(0,n.jsx)(e.li,{children:\"the gcc compiler\"}),`\n`,(0,n.jsx)(e.li,{children:\"the make build tool\"}),`\n`,(0,n.jsx)(e.li,{children:\"I leave the installation of these tools to you.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"gdb\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#gdb\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"GDB\"]}),`\n`,(0,n.jsx)(e.p,{children:\"While optional, I would recommend you also install the gdb debugger. This was invaluable to me when writing this post, as my code would frequently crash or justs not work. Using gdb is outside the scope of this post, but there are plenty of guides online. If you do decide to use gdb, I would recommending using layout asm, layout regs, and set disassembly-flavor intel; this will display the register values and assembly code in Intel syntax in separate windows. You may find it annoying to type these commands in at the start of every debugging session, in which case you can copy the following into .gdbinit in your home directory:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#56B6C2\"},children:\"set\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:\"auto-load\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:\"safe-path\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:\"/\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#56B6C2\"},children:\"set\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:\"disassembly-flavor\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:\"intel\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:\" \"}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"layout \"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:\"regs\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"layout \"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:\"asm\"})]})]})})}),`\n`,(0,n.jsxs)(e.h1,{id:\"introduction\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#introduction\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Introduction\"]}),`\n`,(0,n.jsx)(e.p,{children:\"To execute a program, your CPU accepts machine code instructions. These are raw bytes that instruct the CPU to perform one of the low level operations it knows how to do -- such as access memory, perform basic arithmetic, move data into registers, etc.\"}),`\n`,(0,n.jsx)(e.p,{children:\"While programmers did write raw machine code in some of the earliest days in computing, almost no one writes raw machine code today. Machine code is incredibly difficult for humans to read, write, and understand because it is merely a sequence of numbers encoded in binary that is sent to the CPU. Imagine encoding the English alphabet with the numbers 1-26 and trying to write a paper using those numbers in place of letters. While it is possible, it would take an exorbitant amount of time and likely be fraught with errors.\"}),`\n`,(0,n.jsx)(e.p,{children:\"These early computer scientists soon developed assembly as an abstraction on top of machine code. Instead of writing the sequence of numbers that would encode machine code instructions, code would be written with text that humans could better read and understand. Each line would encode one instruction and any arguments that instruction would accept. Labels were also added so that code could refer to certain parts of the program in a simple way, allowing programmers to more easily implement loops, functions, conditional statements, etc.\"}),`\n`,(0,n.jsx)(e.p,{children:\"However, assembly cannot be executed by the CPU -- the CPU can only execute machine code. Thus, assembly must be assembled into machine code by an assembler. An assembler is essentially a compiler from assembly to machine code. This machine code can then be sent to the CPU and executed.\"}),`\n`,(0,n.jsx)(e.p,{children:\"As assembly is only a light abstraction over machine code, it is highly processor-specific and low level. That means that assembly code must take certain features of the CPU into account to work properly, such as the architecture, registers, addressing modes, data types, and more.\"}),`\n`,(0,n.jsx)(e.p,{children:\"We will be writing code for the x86 architecture, targeting CPUs with 64 bit registers. This is usually succinctly described as x86-64 assembly code.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Furthermore, as we are not writing assembly for a bare metal application, we rely on interfacing with the operating system to perform many operations, such as opening, reading from, writing to, and closing files. The interface to perform these operations through the operating system are operating system specific, so we will be targeting Linux in this article.\"}),`\n`,(0,n.jsxs)(e.h1,{id:\"assembly-basics\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#assembly-basics\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Assembly Basics\"]}),`\n`,(0,n.jsx)(e.p,{children:\"We will first review some preliminary aspects of assembly code that are required to read or write any assembly.\"}),`\n`,(0,n.jsxs)(e.h2,{id:\"registers\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#registers\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"registers\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Much of assembly code performs operations with registers. Registers are small memory locations within the CPU that store the data that the CPU performs operations on. For instance, when performing an add operation, one of the operands must be CPU register that the CPU will save the final sum to.\"}),`\n`,(0,n.jsx)(e.p,{children:\"CPU registers are typically either 8 bit, 16 bit, 32 bit, or 64 bit. Most modern desktop processors today are 64 bit, and as stated before, we are writing 64 bit assembly code.\"}),`\n`,(0,n.jsx)(e.p,{children:\"These registers are all referred to with special, and somewhat confusing, names in assembly code.\"}),`\n`,(0,n.jsx)(e.p,{children:\"The table here lists all of the x86-64 registers.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Note that although these registers are 64 bit, you can specifically access smaller portions of the registers. For example, here are all of the subparts of the 64 bit rax register:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"rax\"}),\": the full 64 bit register\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"eax\"}),\" : the lower 32 bits of \",(0,n.jsx)(e.code,{children:\"rax\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"ax\"}),\" : the lowest 16 bits of \",(0,n.jsx)(e.code,{children:\"rax\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"ah\"}),\" : the upper 8 bits of \",(0,n.jsx)(e.code,{children:\"ax\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"al\"}),\" : the lower 8 bits of \",(0,n.jsx)(e.code,{children:\"ax\"}),\" / the lowest 8 bits of \",(0,n.jsx)(e.code,{children:\"rax\"}),\" You can find all of these names, as well as the names of the other registers, in the link above.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"Note\"}),\" that you cannot access the highest 32 bits of \",(0,n.jsx)(e.code,{children:\"rax\"}),\" nor the highest 16 bits of eax directly. You can compute their values using bit operations, but their values cannot be accessed directly.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"We can move data into registers with the mov class of instructions.\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"asm\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"asm\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"mov\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"rax\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"0xdeadbeef\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"; move the number 0xdeadbeef into rax\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"mov\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"eax\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"42\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"         \"}),(0,n.jsx)(e.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"; move the number 42 into eax, the lower 32 bits of rax\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"mov\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"ax\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"0xff\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"        \"}),(0,n.jsx)(e.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"; move the number 0xff into ax, the lowest 16 bits of rax\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"mov\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"ah\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"0xf\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"         \"}),(0,n.jsx)(e.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"; move the number 0xf into ah, the high 8 bits of ax\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"mov\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"al\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"0xa\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"         \"}),(0,n.jsx)(e.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"; move the number 0xa into al, the low 8 bits of ax\"})]})]})})}),`\n`,(0,n.jsxs)(e.h2,{id:\"instructions\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#instructions\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Instructions\"]}),`\n`,(0,n.jsx)(e.p,{children:\"We should now discuss instructions.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Every line of an assembly program encodes exactly one assembly instruction. An instruction is an one operation that a CPU executes. Most instructions additionally take one or more operands, which are arguments that specify the operation of the instruction. For instance, the mov instruction showed above takes a register as its first operand and a number as its second operand. This encodes the operation of moving the number into the register. There are different forms of many instructions, however, that accept different operands; for instance, each line above is a different form of mov, as it accepts a different size of register. This means that the machine code number of the mov instruction is different on each line. Thus, each form of an instruction is encoded by a different number in machine code.\"}),`\n`,(0,n.jsx)(e.p,{children:\"We do not have to worry too much about the different forms of instructions and their machine code numbers to write simple assembly code, thankfully. Just be aware that there are many assembly instructions and each instruction can take none, one, or more operands.\"}),`\n`,(0,n.jsx)(e.p,{children:\"The mov instruction discussed above, generally, moves data from a source to a destination of equal size in the form mov [dest] [src].\"})]})}function x(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(h,t)})):h(t)}var v=x;return w(A);})();\n;return Component;"
        },
        "_id": "posts/advent-of-code-assembly.mdx",
        "_raw": {
          "sourceFilePath": "posts/advent-of-code-assembly.mdx",
          "sourceFileName": "advent-of-code-assembly.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/advent-of-code-assembly"
        },
        "type": "Post",
        "readingTime": {
          "text": "7 min read",
          "minutes": 6.445,
          "time": 386700,
          "words": 1289
        },
        "slug": "posts/advent-of-code-assembly",
        "slugAsParams": "advent-of-code-assembly",
        "url": "/posts/posts/advent-of-code-assembly",
        "slugs": "posts/advent-of-code-assembly"
      },
      "documentHash": "1683214601941",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/backend.mdx": {
      "document": {
        "title": "2023 State of Databases for Serverless & Edge",
        "date": "2023-01-25T00:00:00.000Z",
        "summary": "An overview of databases that pair well with modern application and compute providers.",
        "image": "/images/backend/og.png",
        "body": {
          "raw": "\nThere's been massive innovation in the database and backend space for developers building applications with serverless and edge compute. There are new tools, companies, and even programming models that simplify how developers store data.\n\nThis post will be an overview of databases that pair well with modern application and compute providers.\n\n## Criteria\n\nI think 2 + 2 is {2+2}\n\n<p className=\"text-100-blue\">This is blue text</p>\n\nI'll focus on **transactional¹** workloads instead of analytical² workloads.\n\nThe “backend” space is vast: search, analytics, data science, and more – so I'll niche down here. The primary criteria of this overview is:\n\n1. Services that work exceptionally well when paired with serverless and edge compute\n2. Services that work with JavaScript and TypeScript codebases\n\n> **Disclaimer:** I work at Vercel, which partners with companies in this post. I also have personally used many of these tools for my own personal projects. My site currently uses PlanetScale and I'm also an angel investor in Supabase (mentioned below).\n\n## A new programming model\n\nRelational databases have been around for 25+ years.\n\nWhile there are new companies creating _serverless-first_ storage solutions, a new programming model is required for workloads to be compatible with serverless compute and modern runtimes.\n\nThese solutions must be:\n\n- **Connectionless:** Developers don't want to think about manual connection management. Traditional database protocols are stateful, whereas HTTP is mostly stateless, making it easier to use with scale to zero compute. Exposed through an SDK or HTTP API, “connectionless” solutions provide an **abstraction over connection pooling**.\n- **Web native:** Browser data-fetching APIs (e.g. Web `fetch`) and protocols are eating the world. New databases use HTTP APIs or WebSockets, rather than opening direct connections to the database. This makes them compatible with all forms of compute (including the lighter runtime used in edge compute).\n- **Lightweight:** Client libraries (and drivers) are becoming thin. Complexity is shifting to the database vendor, taking on the burden as part of their global infrastructure. For example, their gateway might handle connection pooling or provide caching infrastructure. This has led to a new wave of ORMs (i.e. abstractions to query data) both as standalone libraries and as integrated database SDKs.\n- **(Bonus) Type-safe:** TypeScript developers are favoring databases or libraries which provide tooling to enable type-safe access to your data. For example: [Prisma](https://www.prisma.io/), [Kysely](https://github.com/koskimas/kysely), [Drizzle](https://github.com/drizzle-team/drizzle-orm), [Contentlayer](https://www.contentlayer.dev/), and [Zapatos](https://jawj.github.io/zapatos/).\n\nConsider databases like Postgres. New solutions like Neon and Supabase abstract connection management, providing you with a simple way to query and mutate data. In the case of Supabase, there's a client library that uses an HTTP API [built on PostgREST](https://supabase.com/docs/guides/api):\n\n```jsx\nimport { createClient } from \"@supabase/supabase-js\";\nlet supabase = createClient(\"https://<project>.supabase.co\", \"<your-anon-key>\");\nlet { data } = await supabase.from(\"countries\").select();\n```\n\nAnd for Neon:\n\n```jsx\nimport { Client } from \"@neondatabase/serverless\";\nlet client = new Client(env.DATABASE_URL);\nlet {\n  rows: [{ now }],\n} = await client.query(\"select now();\");\n```\n\nNeon's solution is [particularly interesting](https://neon.tech/blog/serverless-driver-for-postgres/).\n\n> The basic premise is simple: our driver redirects the PostgreSQL wire protocol via a special proxy. Our driver connects from the edge function to the proxy over a WebSocket, telling the proxy which database host and port it wants to reach. The proxy opens a TCP connection to that host and port and relays traffic in both directions.\n\nThe connection management isn't going away – it's just being handled by the vendor now.\n\nThere's even solutions like PlanetScale which can handle up to [a million connections](https://planetscale.com/blog/one-million-connections), which also allows you to effectively never think about managing connections.\n\n## Trends\n\nThis new programming model has created emerging trends for database companies:\n\n- Databases are increasingly becoming **data platforms**, including other adjacent solutions like full-text search and analytics.\n- The **decoupling of storage and compute**, popularized by Snowflake (and more), is enabling new players (e.g. Neon et al.) to massively reduce the cost of a “database at rest”. This pairs well with frontend git branch-based workflows, where you want to scale to zero when not being used.\n- Increasingly developers **don't want to “dial the knobs”**. Solutions like DynamoDB (and in some ways S3) provided infinite scale without needing to tweak memory, storage, CPU, clusters, and instances.\n- The dream of **global data** is here, but not how it was predicted. Trying to replicate _all_ data to _every_ network edge is probably not the correct solution most times. Instead, we're seeing specialized data APIs and the emergence of user-specific data stores (e.g. for shopping cart data).\n- More databases are **embracing serverless**, but what “serverless” means to them varies. There are different vectors of autoscaling: connections, storage, compute, and more.\n\n## Databases\n\nI'll bucket these into “established” and “rising” categories, serverless/serverful, as well as generally available (GA) and pre-GA. I'll also mostly talk about managed vendors.\n\nFor example, you can of course run MySQL or Postgres on major cloud providers like AWS. There's a long tail of niche data storage solutions, so some will definitely be missing that I haven't heard of or used.\n\n### Established serverless solutions\n\n- **DynamoDB**\n  - **[AWS DynamoDB:](https://aws.amazon.com/dynamodb/)** Fully managed, serverless, key-value NoSQL database.\n- **Firebase**\n  - **[Firestore:](https://firebase.google.com/docs/firestore)** Over 10 years old now, Firestore is a well-adopted document database. One unique advantage Firebase is its built-in support for authentication, real-time workloads, and cross-platform support for mobile.\n- **MongoDB**\n  - [Atlas Serverless:](https://www.mongodb.com/use-cases/serverless) MongoDB has an entire data platform, including search / analytics / etc. Their recent investment into serverless is very exciting, with Atlas Serverless now [generally available](https://www.mongodb.com/blog/post/embrace-benefits-serverless-development-atlas). Their [Data API](https://www.mongodb.com/docs/atlas/api/data-api/) makes them a fantastic pair for serverless / edge.\n- **MySQL**\n  - **[PlanetScale](https://planetscale.com/):** MySQL through [Vitess](https://planetscale.com/blog/all-the-tech-planetscale-replaces). Can easily handle quite a [large](https://planetscale.com/blog/one-million-queries-per-second-with-mysql) [scale](https://planetscale.com/blog/one-million-connections) and also includes some nice features to [speed up](https://planetscale.com/blog/introducing-planetscale-boost) and [monitor](https://planetscale.com/blog/introducing-planetscale-insights-advanced-query-monitoring) queries. Their [serverless driver](https://planetscale.com/blog/introducing-the-planetscale-serverless-driver-for-javascript) (`@planetscale/database`) has been easy to use, but I prefer [Kysely](https://github.com/depot/kysely-planetscale).\n- **PostgreSQL**\n  - **[AWS Aurora](https://aws.amazon.com/rds/aurora/serverless/):** One of the first serverless Postgres offerings.\n  - **[CockroachDB](https://www.cockroachlabs.com/blog/announcing-cockroachdb-serverless/):** Autoscales and distributes data across multiple nodes. Focused on high data consistency and integrity. Supports most of Postgres but not stored procedures and extensions.\n- **Redis**\n  - **[Upstash](https://upstash.com/):** Offers durable/consistent Redis, global replication options, and Kafka. Fantastic `@upstash/redis` HTTP/REST client library.\n\n### Rising serverless database solutions\n\n- **Generally Available (GA)**\n  - **[Fauna](https://fauna.com/):** They were an early mover in the serverless data space. I've had success with their GraphQL APIs before, but feel mostly indifferent on [FQL](https://docs.fauna.com/fauna/current/api/fql/).\n- **Pre-GA**\n  - **[Convex](https://www.convex.dev/)**: Fantastic for real-time workloads, but also a very simple, type-safe interface for querying/mutating data. You write (and think) in functions. Pairs well with React's mental model.\n  - **[Grafbase](https://grafbase.com/)**: If you love GraphQL, Grafbase is worth exploring. Designed to integrate into branch-based workflows + fast reads globally. Realtime and full-text search are in the works.\n  - **[Neon:](https://neon.tech/)** Postgres with separation of storage and compute. Uniquely designed for serverless and works with the native Postgres driver + supports database branching workflows.\n  - **[Supabase](https://supabase.com/):** Open-source, built-on pure Postgres. [Database](https://supabase.com/database) + [Auth](https://supabase.com/auth) + [Storage](https://supabase.com/storage) and more. Scales up on pay-as-you-go, and [working on scale to zero](https://supabase.com/blog/supabase-series-b#where-were-going).\n  - **[Xata](https://xata.io/)**: Not only a database, but search / analytics as well. I'm a fan of their spreadsheet-like UI, which is approachable for a wider audience.\n- _+ Long tail of new providers that can do DB hosting (Railway, Render, Fly, etc)._\n\n### Stateful backends and other solutions\n\n- **Generally Available (GA)**\n  - **[AlloyDB](https://cloud.google.com/alloydb):** Very exciting innovation coming from Google. AlloyDB is unique because it can handle both transactional¹ and analytical² workloads.\n  - **[Ably](https://ably.com/):** Realtime infrastructure with [queues support](https://ably.com/docs/general/queues) and other message durability options.\n  - **[Crunchy Postgres](https://www.crunchydata.com/):** Crunchy Postgres is [\"just Postgres\"](https://changelog.com/news/just-postgres-LWm4). Focused on performance and availability, cost-effectiveness, and supporting all native Postgres features.\n  - **[Hasura:](https://hasura.io/)** Makes it easy to connect data from many different sources and expose it as a GraphQL API. Can use Neon under-the-hood as the database provider.\n  - **[Liveblocks](https://liveblocks.io/):** Realtime collaboration infrastructure, they offer persistent [conflict-free data](https://liveblocks.io/conflict-free-data-types) along with APIs for document browsing, permissions management, database sync. Beautiful design and documentation.\n  - **[Replicache](https://replicache.dev/)**: More of a database _synchronization engine_ that can be coupled with other solutions with no real-time solution. We use this for [comments on Vercel previews](https://vercel.com/blog/making-live-reviews-a-reality-enhanced-preview-experience).\n  - **[TimeScale](https://www.timescale.com/):** For both transactional and analytical workloads. Adds many features found in NoSQL databases to Postgres, and also integrates with S3 for storage.\n- **Pre-GA**\n  - **[ChiselStrike](https://www.chiselstrike.com/):** Write your TypeScript class, generate an API. Really leaning into the “infrastructure from code” approach, you write and think in functions, somewhat similar to Convex.\n  - **[EdgeDB](https://www.edgedb.com/):** EdgeDB is challenging the status quo. Particularly the “merger” between ORM / database, more than just a query builder, but a way to _optimize_ queries.\n  - **[Nhost:](https://nhost.io/)** Firebase, but with GraphQL. Built on Hasura, Postgres, and S3.\n  - [Rowy:](https://www.rowy.io) Low-code, spreadsheet-like backend (almost like an open-source Airtable) but they also have the ability to write functions to mutate data.\n  - [SurrealDB:](https://surrealdb.com/) Has its own SQL-flavored syntax, also trying to provide the spreadsheet-like UI for viewing data (still waitlist access, haven't used it).\n  - **[Tigris:](https://www.tigrisdata.com/)** Document database, focused on real-time and also includes full-text search.\n  - **[WunderGraph:](https://wundergraph.com/)** Trying to lead with an excellent ORM / client library (end-to-end type safety, GraphQL support) and wedge into a cloud product (still waitlist access, haven't used it).\n- **Other Solutions**\n  - **Caching Engines:** [Stellate](https://stellate.co/), [Prisma Accelerate](https://www.prisma.io/data-platform/accelerate), [ReadySet](https://readyset.io/).\n  - **Cloud Provider Offerings:** Azure SQL, Azure CosmosDB, Google Cloud SQL, Google BigTable, and many more.\n  - **Content Management (Headless CMS):** These can still act as a database, just a different domain-specific solution. [Sanity](https://www.sanity.io/), [Contentful](https://www.contentful.com/), [Sitecore](https://www.sitecore.com/), and more.\n\n---\n\n¹ Commonly referred to as OLTP (Online _Transactional_ Processing). These are for CRUD operations, most commonly the MySQL and Postgres databases of the world.\n\n² Commonly referred to as OLAP (Online _Analytical_ Processing). These are for your real-time data workloads, like [Clickhouse](https://clickhouse.com/) (also [Tinybird](https://www.tinybird.co/)), [SingleStore](https://www.singlestore.com/), [TimeScale](https://www.timescale.com/), and [ElasticSearch](https://www.elastic.co/).\n\n_Thanks to [Guillermo Rauch](https://twitter.com/rauchg), [Paul Copplestone](https://twitter.com/kiwicopple), [Fredrik Björk](https://twitter.com/fbjork), [Anthony Shew](https://twitter.com/anthonysheww), [Craig Kerstiens](https://twitter.com/craigkerstiens), [Jamie Turner](https://twitter.com/jamwt), [Nikita Shamgunov](https://twitter.com/nikitabase), [Yoko Li](https://twitter.com/stuffyokodraws), [Pratyush Choudhury](https://twitter.com/177pc), [Stas Kelvich](https://twitter.com/kelvich), [Enes Akar](https://twitter.com/enesakar), and [Steven Tey](https://twitter.com/steventey) for reviewing this post._\n",
          "code": "var Component=(()=>{var d=Object.create;var t=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var f=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),y=(r,e)=>{for(var a in e)t(r,a,{get:e[a],enumerable:!0})},i=(r,e,a,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of u(e))!g.call(r,s)&&s!==a&&t(r,s,{get:()=>e[s],enumerable:!(l=p(e,s))||l.enumerable});return r};var w=(r,e,a)=>(a=r!=null?d(m(r)):{},i(e||!r||!r.__esModule?t(a,\"default\",{value:r,enumerable:!0}):a,r)),b=r=>i(t({},\"__esModule\",{value:!0}),r);var c=f((C,o)=>{o.exports=_jsx_runtime});var A={};y(A,{default:()=>k,frontmatter:()=>B});var n=w(c()),B={title:\"2023 State of Databases for Serverless & Edge\",date:\"2023-01-25\",summary:\"An overview of databases that pair well with modern application and compute providers.\",image:\"/images/backend/og.png\"};function h(r){let e=Object.assign({p:\"p\",h2:\"h2\",a:\"a\",span:\"span\",strong:\"strong\",ol:\"ol\",li:\"li\",blockquote:\"blockquote\",em:\"em\",ul:\"ul\",code:\"code\",div:\"div\",pre:\"pre\",h3:\"h3\",hr:\"hr\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"There's been massive innovation in the database and backend space for developers building applications with serverless and edge compute. There are new tools, companies, and even programming models that simplify how developers store data.\"}),`\n`,(0,n.jsx)(e.p,{children:\"This post will be an overview of databases that pair well with modern application and compute providers.\"}),`\n`,(0,n.jsxs)(e.h2,{id:\"criteria\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#criteria\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Criteria\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"I think 2 + 2 is \",2+2]}),`\n`,(0,n.jsx)(\"p\",{className:\"text-100-blue\",children:\"This is blue text\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I'll focus on \",(0,n.jsx)(e.strong,{children:\"transactional\\xB9\"}),\" workloads instead of analytical\\xB2 workloads.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"The \\u201Cbackend\\u201D space is vast: search, analytics, data science, and more \\u2013 so I'll niche down here. The primary criteria of this overview is:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Services that work exceptionally well when paired with serverless and edge compute\"}),`\n`,(0,n.jsx)(e.li,{children:\"Services that work with JavaScript and TypeScript codebases\"}),`\n`]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Disclaimer:\"}),\" I work at Vercel, which partners with companies in this post. I also have personally used many of these tools for my own personal projects. My site currently uses PlanetScale and I'm also an angel investor in Supabase (mentioned below).\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"a-new-programming-model\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#a-new-programming-model\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"A new programming model\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Relational databases have been around for 25+ years.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"While there are new companies creating \",(0,n.jsx)(e.em,{children:\"serverless-first\"}),\" storage solutions, a new programming model is required for workloads to be compatible with serverless compute and modern runtimes.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"These solutions must be:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Connectionless:\"}),\" Developers don't want to think about manual connection management. Traditional database protocols are stateful, whereas HTTP is mostly stateless, making it easier to use with scale to zero compute. Exposed through an SDK or HTTP API, \\u201Cconnectionless\\u201D solutions provide an \",(0,n.jsx)(e.strong,{children:\"abstraction over connection pooling\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Web native:\"}),\" Browser data-fetching APIs (e.g. Web \",(0,n.jsx)(e.code,{children:\"fetch\"}),\") and protocols are eating the world. New databases use HTTP APIs or WebSockets, rather than opening direct connections to the database. This makes them compatible with all forms of compute (including the lighter runtime used in edge compute).\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Lightweight:\"}),\" Client libraries (and drivers) are becoming thin. Complexity is shifting to the database vendor, taking on the burden as part of their global infrastructure. For example, their gateway might handle connection pooling or provide caching infrastructure. This has led to a new wave of ORMs (i.e. abstractions to query data) both as standalone libraries and as integrated database SDKs.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"(Bonus) Type-safe:\"}),\" TypeScript developers are favoring databases or libraries which provide tooling to enable type-safe access to your data. For example: \",(0,n.jsx)(e.a,{href:\"https://www.prisma.io/\",children:\"Prisma\"}),\", \",(0,n.jsx)(e.a,{href:\"https://github.com/koskimas/kysely\",children:\"Kysely\"}),\", \",(0,n.jsx)(e.a,{href:\"https://github.com/drizzle-team/drizzle-orm\",children:\"Drizzle\"}),\", \",(0,n.jsx)(e.a,{href:\"https://www.contentlayer.dev/\",children:\"Contentlayer\"}),\", and \",(0,n.jsx)(e.a,{href:\"https://jawj.github.io/zapatos/\",children:\"Zapatos\"}),\".\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Consider databases like Postgres. New solutions like Neon and Supabase abstract connection management, providing you with a simple way to query and mutate data. In the case of Supabase, there's a client library that uses an HTTP API \",(0,n.jsx)(e.a,{href:\"https://supabase.com/docs/guides/api\",children:\"built on PostgREST\"}),\":\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"jsx\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"jsx\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" { \"}),(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"createClient\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" } \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"from\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:'\"@supabase/supabase-js\"'}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\";\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"let\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"supabase\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#61AFEF\"},children:\"createClient\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:'\"https://<project>.supabase.co\"'}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:'\"<your-anon-key>\"'}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\");\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"let\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" { \"}),(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"data\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" } \"}),(0,n.jsx)(e.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"await\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E5C07B\"},children:\"supabase\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\".\"}),(0,n.jsx)(e.span,{style:{color:\"#61AFEF\"},children:\"from\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:'\"countries\"'}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\").\"}),(0,n.jsx)(e.span,{style:{color:\"#61AFEF\"},children:\"select\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"();\"})]})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"And for Neon:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"jsx\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"jsx\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" { \"}),(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"Client\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" } \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"from\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:'\"@neondatabase/serverless\"'}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\";\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"let\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"client\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"new\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#61AFEF\"},children:\"Client\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#E5C07B\"},children:\"env\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\".\"}),(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"DATABASE_URL\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\");\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"let\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"  \"}),(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"rows\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\": [{ \"}),(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"now\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" }],\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"} \"}),(0,n.jsx)(e.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"await\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E5C07B\"},children:\"client\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\".\"}),(0,n.jsx)(e.span,{style:{color:\"#61AFEF\"},children:\"query\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:'\"select now();\"'}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\");\"})]})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Neon's solution is \",(0,n.jsx)(e.a,{href:\"https://neon.tech/blog/serverless-driver-for-postgres/\",children:\"particularly interesting\"}),\".\"]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"The basic premise is simple: our driver redirects the PostgreSQL wire protocol via a special proxy. Our driver connects from the edge function to the proxy over a WebSocket, telling the proxy which database host and port it wants to reach. The proxy opens a TCP connection to that host and port and relays traffic in both directions.\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"The connection management isn't going away \\u2013 it's just being handled by the vendor now.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"There's even solutions like PlanetScale which can handle up to \",(0,n.jsx)(e.a,{href:\"https://planetscale.com/blog/one-million-connections\",children:\"a million connections\"}),\", which also allows you to effectively never think about managing connections.\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"trends\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#trends\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Trends\"]}),`\n`,(0,n.jsx)(e.p,{children:\"This new programming model has created emerging trends for database companies:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Databases are increasingly becoming \",(0,n.jsx)(e.strong,{children:\"data platforms\"}),\", including other adjacent solutions like full-text search and analytics.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.strong,{children:\"decoupling of storage and compute\"}),\", popularized by Snowflake (and more), is enabling new players (e.g. Neon et al.) to massively reduce the cost of a \\u201Cdatabase at rest\\u201D. This pairs well with frontend git branch-based workflows, where you want to scale to zero when not being used.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Increasingly developers \",(0,n.jsx)(e.strong,{children:\"don't want to \\u201Cdial the knobs\\u201D\"}),\". Solutions like DynamoDB (and in some ways S3) provided infinite scale without needing to tweak memory, storage, CPU, clusters, and instances.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The dream of \",(0,n.jsx)(e.strong,{children:\"global data\"}),\" is here, but not how it was predicted. Trying to replicate \",(0,n.jsx)(e.em,{children:\"all\"}),\" data to \",(0,n.jsx)(e.em,{children:\"every\"}),\" network edge is probably not the correct solution most times. Instead, we're seeing specialized data APIs and the emergence of user-specific data stores (e.g. for shopping cart data).\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"More databases are \",(0,n.jsx)(e.strong,{children:\"embracing serverless\"}),\", but what \\u201Cserverless\\u201D means to them varies. There are different vectors of autoscaling: connections, storage, compute, and more.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"databases\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#databases\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Databases\"]}),`\n`,(0,n.jsx)(e.p,{children:\"I'll bucket these into \\u201Cestablished\\u201D and \\u201Crising\\u201D categories, serverless/serverful, as well as generally available (GA) and pre-GA. I'll also mostly talk about managed vendors.\"}),`\n`,(0,n.jsx)(e.p,{children:\"For example, you can of course run MySQL or Postgres on major cloud providers like AWS. There's a long tail of niche data storage solutions, so some will definitely be missing that I haven't heard of or used.\"}),`\n`,(0,n.jsxs)(e.h3,{id:\"established-serverless-solutions\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#established-serverless-solutions\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Established serverless solutions\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"DynamoDB\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://aws.amazon.com/dynamodb/\",children:\"AWS DynamoDB:\"})}),\" Fully managed, serverless, key-value NoSQL database.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Firebase\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://firebase.google.com/docs/firestore\",children:\"Firestore:\"})}),\" Over 10 years old now, Firestore is a well-adopted document database. One unique advantage Firebase is its built-in support for authentication, real-time workloads, and cross-platform support for mobile.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"MongoDB\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"https://www.mongodb.com/use-cases/serverless\",children:\"Atlas Serverless:\"}),\" MongoDB has an entire data platform, including search / analytics / etc. Their recent investment into serverless is very exciting, with Atlas Serverless now \",(0,n.jsx)(e.a,{href:\"https://www.mongodb.com/blog/post/embrace-benefits-serverless-development-atlas\",children:\"generally available\"}),\". Their \",(0,n.jsx)(e.a,{href:\"https://www.mongodb.com/docs/atlas/api/data-api/\",children:\"Data API\"}),\" makes them a fantastic pair for serverless / edge.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"MySQL\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://planetscale.com/\",children:\"PlanetScale\"}),\":\"]}),\" MySQL through \",(0,n.jsx)(e.a,{href:\"https://planetscale.com/blog/all-the-tech-planetscale-replaces\",children:\"Vitess\"}),\". Can easily handle quite a \",(0,n.jsx)(e.a,{href:\"https://planetscale.com/blog/one-million-queries-per-second-with-mysql\",children:\"large\"}),\" \",(0,n.jsx)(e.a,{href:\"https://planetscale.com/blog/one-million-connections\",children:\"scale\"}),\" and also includes some nice features to \",(0,n.jsx)(e.a,{href:\"https://planetscale.com/blog/introducing-planetscale-boost\",children:\"speed up\"}),\" and \",(0,n.jsx)(e.a,{href:\"https://planetscale.com/blog/introducing-planetscale-insights-advanced-query-monitoring\",children:\"monitor\"}),\" queries. Their \",(0,n.jsx)(e.a,{href:\"https://planetscale.com/blog/introducing-the-planetscale-serverless-driver-for-javascript\",children:\"serverless driver\"}),\" (\",(0,n.jsx)(e.code,{children:\"@planetscale/database\"}),\") has been easy to use, but I prefer \",(0,n.jsx)(e.a,{href:\"https://github.com/depot/kysely-planetscale\",children:\"Kysely\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"PostgreSQL\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://aws.amazon.com/rds/aurora/serverless/\",children:\"AWS Aurora\"}),\":\"]}),\" One of the first serverless Postgres offerings.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://www.cockroachlabs.com/blog/announcing-cockroachdb-serverless/\",children:\"CockroachDB\"}),\":\"]}),\" Autoscales and distributes data across multiple nodes. Focused on high data consistency and integrity. Supports most of Postgres but not stored procedures and extensions.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Redis\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://upstash.com/\",children:\"Upstash\"}),\":\"]}),\" Offers durable/consistent Redis, global replication options, and Kafka. Fantastic \",(0,n.jsx)(e.code,{children:\"@upstash/redis\"}),\" HTTP/REST client library.\"]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.h3,{id:\"rising-serverless-database-solutions\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#rising-serverless-database-solutions\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Rising serverless database solutions\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Generally Available (GA)\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://fauna.com/\",children:\"Fauna\"}),\":\"]}),\" They were an early mover in the serverless data space. I've had success with their GraphQL APIs before, but feel mostly indifferent on \",(0,n.jsx)(e.a,{href:\"https://docs.fauna.com/fauna/current/api/fql/\",children:\"FQL\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Pre-GA\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://www.convex.dev/\",children:\"Convex\"})}),\": Fantastic for real-time workloads, but also a very simple, type-safe interface for querying/mutating data. You write (and think) in functions. Pairs well with React's mental model.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://grafbase.com/\",children:\"Grafbase\"})}),\": If you love GraphQL, Grafbase is worth exploring. Designed to integrate into branch-based workflows + fast reads globally. Realtime and full-text search are in the works.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://neon.tech/\",children:\"Neon:\"})}),\" Postgres with separation of storage and compute. Uniquely designed for serverless and works with the native Postgres driver + supports database branching workflows.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://supabase.com/\",children:\"Supabase\"}),\":\"]}),\" Open-source, built-on pure Postgres. \",(0,n.jsx)(e.a,{href:\"https://supabase.com/database\",children:\"Database\"}),\" + \",(0,n.jsx)(e.a,{href:\"https://supabase.com/auth\",children:\"Auth\"}),\" + \",(0,n.jsx)(e.a,{href:\"https://supabase.com/storage\",children:\"Storage\"}),\" and more. Scales up on pay-as-you-go, and \",(0,n.jsx)(e.a,{href:\"https://supabase.com/blog/supabase-series-b#where-were-going\",children:\"working on scale to zero\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://xata.io/\",children:\"Xata\"})}),\": Not only a database, but search / analytics as well. I'm a fan of their spreadsheet-like UI, which is approachable for a wider audience.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.em,{children:\"+ Long tail of new providers that can do DB hosting (Railway, Render, Fly, etc).\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.h3,{id:\"stateful-backends-and-other-solutions\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#stateful-backends-and-other-solutions\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Stateful backends and other solutions\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Generally Available (GA)\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://cloud.google.com/alloydb\",children:\"AlloyDB\"}),\":\"]}),\" Very exciting innovation coming from Google. AlloyDB is unique because it can handle both transactional\\xB9 and analytical\\xB2 workloads.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://ably.com/\",children:\"Ably\"}),\":\"]}),\" Realtime infrastructure with \",(0,n.jsx)(e.a,{href:\"https://ably.com/docs/general/queues\",children:\"queues support\"}),\" and other message durability options.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://www.crunchydata.com/\",children:\"Crunchy Postgres\"}),\":\"]}),\" Crunchy Postgres is \",(0,n.jsx)(e.a,{href:\"https://changelog.com/news/just-postgres-LWm4\",children:'\"just Postgres\"'}),\". Focused on performance and availability, cost-effectiveness, and supporting all native Postgres features.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://hasura.io/\",children:\"Hasura:\"})}),\" Makes it easy to connect data from many different sources and expose it as a GraphQL API. Can use Neon under-the-hood as the database provider.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://liveblocks.io/\",children:\"Liveblocks\"}),\":\"]}),\" Realtime collaboration infrastructure, they offer persistent \",(0,n.jsx)(e.a,{href:\"https://liveblocks.io/conflict-free-data-types\",children:\"conflict-free data\"}),\" along with APIs for document browsing, permissions management, database sync. Beautiful design and documentation.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://replicache.dev/\",children:\"Replicache\"})}),\": More of a database \",(0,n.jsx)(e.em,{children:\"synchronization engine\"}),\" that can be coupled with other solutions with no real-time solution. We use this for \",(0,n.jsx)(e.a,{href:\"https://vercel.com/blog/making-live-reviews-a-reality-enhanced-preview-experience\",children:\"comments on Vercel previews\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://www.timescale.com/\",children:\"TimeScale\"}),\":\"]}),\" For both transactional and analytical workloads. Adds many features found in NoSQL databases to Postgres, and also integrates with S3 for storage.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Pre-GA\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://www.chiselstrike.com/\",children:\"ChiselStrike\"}),\":\"]}),\" Write your TypeScript class, generate an API. Really leaning into the \\u201Cinfrastructure from code\\u201D approach, you write and think in functions, somewhat similar to Convex.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[(0,n.jsx)(e.a,{href:\"https://www.edgedb.com/\",children:\"EdgeDB\"}),\":\"]}),\" EdgeDB is challenging the status quo. Particularly the \\u201Cmerger\\u201D between ORM / database, more than just a query builder, but a way to \",(0,n.jsx)(e.em,{children:\"optimize\"}),\" queries.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://nhost.io/\",children:\"Nhost:\"})}),\" Firebase, but with GraphQL. Built on Hasura, Postgres, and S3.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"https://www.rowy.io\",children:\"Rowy:\"}),\" Low-code, spreadsheet-like backend (almost like an open-source Airtable) but they also have the ability to write functions to mutate data.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"https://surrealdb.com/\",children:\"SurrealDB:\"}),\" Has its own SQL-flavored syntax, also trying to provide the spreadsheet-like UI for viewing data (still waitlist access, haven't used it).\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://www.tigrisdata.com/\",children:\"Tigris:\"})}),\" Document database, focused on real-time and also includes full-text search.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://wundergraph.com/\",children:\"WunderGraph:\"})}),\" Trying to lead with an excellent ORM / client library (end-to-end type safety, GraphQL support) and wedge into a cloud product (still waitlist access, haven't used it).\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Other Solutions\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Caching Engines:\"}),\" \",(0,n.jsx)(e.a,{href:\"https://stellate.co/\",children:\"Stellate\"}),\", \",(0,n.jsx)(e.a,{href:\"https://www.prisma.io/data-platform/accelerate\",children:\"Prisma Accelerate\"}),\", \",(0,n.jsx)(e.a,{href:\"https://readyset.io/\",children:\"ReadySet\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Cloud Provider Offerings:\"}),\" Azure SQL, Azure CosmosDB, Google Cloud SQL, Google BigTable, and many more.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Content Management (Headless CMS):\"}),\" These can still act as a database, just a different domain-specific solution. \",(0,n.jsx)(e.a,{href:\"https://www.sanity.io/\",children:\"Sanity\"}),\", \",(0,n.jsx)(e.a,{href:\"https://www.contentful.com/\",children:\"Contentful\"}),\", \",(0,n.jsx)(e.a,{href:\"https://www.sitecore.com/\",children:\"Sitecore\"}),\", and more.\"]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\xB9 Commonly referred to as OLTP (Online \",(0,n.jsx)(e.em,{children:\"Transactional\"}),\" Processing). These are for CRUD operations, most commonly the MySQL and Postgres databases of the world.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\xB2 Commonly referred to as OLAP (Online \",(0,n.jsx)(e.em,{children:\"Analytical\"}),\" Processing). These are for your real-time data workloads, like \",(0,n.jsx)(e.a,{href:\"https://clickhouse.com/\",children:\"Clickhouse\"}),\" (also \",(0,n.jsx)(e.a,{href:\"https://www.tinybird.co/\",children:\"Tinybird\"}),\"), \",(0,n.jsx)(e.a,{href:\"https://www.singlestore.com/\",children:\"SingleStore\"}),\", \",(0,n.jsx)(e.a,{href:\"https://www.timescale.com/\",children:\"TimeScale\"}),\", and \",(0,n.jsx)(e.a,{href:\"https://www.elastic.co/\",children:\"ElasticSearch\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsxs)(e.em,{children:[\"Thanks to \",(0,n.jsx)(e.a,{href:\"https://twitter.com/rauchg\",children:\"Guillermo Rauch\"}),\", \",(0,n.jsx)(e.a,{href:\"https://twitter.com/kiwicopple\",children:\"Paul Copplestone\"}),\", \",(0,n.jsx)(e.a,{href:\"https://twitter.com/fbjork\",children:\"Fredrik Bj\\xF6rk\"}),\", \",(0,n.jsx)(e.a,{href:\"https://twitter.com/anthonysheww\",children:\"Anthony Shew\"}),\", \",(0,n.jsx)(e.a,{href:\"https://twitter.com/craigkerstiens\",children:\"Craig Kerstiens\"}),\", \",(0,n.jsx)(e.a,{href:\"https://twitter.com/jamwt\",children:\"Jamie Turner\"}),\", \",(0,n.jsx)(e.a,{href:\"https://twitter.com/nikitabase\",children:\"Nikita Shamgunov\"}),\", \",(0,n.jsx)(e.a,{href:\"https://twitter.com/stuffyokodraws\",children:\"Yoko Li\"}),\", \",(0,n.jsx)(e.a,{href:\"https://twitter.com/177pc\",children:\"Pratyush Choudhury\"}),\", \",(0,n.jsx)(e.a,{href:\"https://twitter.com/kelvich\",children:\"Stas Kelvich\"}),\", \",(0,n.jsx)(e.a,{href:\"https://twitter.com/enesakar\",children:\"Enes Akar\"}),\", and \",(0,n.jsx)(e.a,{href:\"https://twitter.com/steventey\",children:\"Steven Tey\"}),\" for reviewing this post.\"]})})]})}function v(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(h,r)})):h(r)}var k=v;return b(A);})();\n;return Component;"
        },
        "_id": "posts/backend.mdx",
        "_raw": {
          "sourceFilePath": "posts/backend.mdx",
          "sourceFileName": "backend.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/backend"
        },
        "type": "Post",
        "readingTime": {
          "text": "9 min read",
          "minutes": 8.18,
          "time": 490800,
          "words": 1636
        },
        "slug": "posts/backend",
        "slugAsParams": "backend",
        "url": "/posts/posts/backend",
        "slugs": "posts/backend"
      },
      "documentHash": "1676984014637",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/beginners-guide-to-dynamic-programming.mdx": {
      "document": {
        "title": "Beginners guide to Dynamic Programming",
        "date": "2023-03-29T00:00:00.000Z",
        "summary": "Advent Of Code Day 01 in x86 Assembly language",
        "image": "blog6.jpg",
        "featured": "true",
        "body": {
          "raw": "\n## Advent of code in Assembly\n\nIn case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\n\n```tsx {9-16} showLineNumbers\n// You can copy this code block\ninterface EmojiProps {\n  label?: string;\n  emoji: string;\n}\n// Note the highlighted rows below\nexport default function Emoji({ label, emoji, ...props }: EmojiProps) {\n  return (\n    <span\n      role=\"img\"\n      aria-label={label || \"\"}\n      aria-hidden={label ? \"false\" : \"true\"}\n      {...props}\n    >\n      {emoji}\n    </span>\n  );\n}\n```\n\nOther things include this:\n\nblablabla\n\n## Hello there!\n",
          "code": "var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var g=(n,l)=>()=>(l||n((l={exports:{}}).exports,l),l.exports),A=(n,l)=>{for(var s in l)r(n,s,{get:l[s],enumerable:!0})},a=(n,l,s,o)=>{if(l&&typeof l==\"object\"||typeof l==\"function\")for(let c of B(l))!m.call(n,c)&&c!==s&&r(n,c,{get:()=>l[c],enumerable:!(o=p(l,c))||o.enumerable});return n};var C=(n,l,s)=>(s=n!=null?d(y(n)):{},a(l||!n||!n.__esModule?r(s,\"default\",{value:n,enumerable:!0}):s,n)),F=n=>a(r({},\"__esModule\",{value:!0}),n);var t=g((E,i)=>{i.exports=_jsx_runtime});var b={};A(b,{default:()=>u,frontmatter:()=>D});var e=C(t()),D={title:\"Beginners guide to Dynamic Programming\",date:\"2023-03-29\",summary:\"Advent Of Code Day 01 in x86 Assembly language\",image:\"blog6.jpg\",featured:\"true\"};function h(n){let l=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",div:\"div\",pre:\"pre\",code:\"code\"},n.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(l.h2,{id:\"advent-of-code-in-assembly\",children:[(0,e.jsx)(l.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advent-of-code-in-assembly\",children:(0,e.jsx)(l.span,{className:\"icon icon-link\"})}),\"Advent of code in Assembly\"]}),`\n`,(0,e.jsx)(l.p,{children:\"In case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\"}),`\n`,(0,e.jsx)(l.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(l.pre,{\"data-language\":\"tsx\",\"data-theme\":\"default\",children:(0,e.jsxs)(l.code,{\"data-line-numbers\":\"\",\"data-language\":\"tsx\",\"data-theme\":\"default\",\"data-line-numbers-max-digits\":\"2\",children:[(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"// You can copy this code block\"})}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"interface\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"EmojiProps\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" {\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"?\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\": \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\";\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\": \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\";\"})]}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"}\"})}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"// Note the highlighted rows below\"})}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"export\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"default\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"function\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#61AFEF\"},children:\"Emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"({ \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\",fontStyle:\"italic\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\",fontStyle:\"italic\"},children:\"emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\", ...\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\",fontStyle:\"italic\"},children:\"props\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" }: \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"EmojiProps\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\") {\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"return\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" (\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"    <\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"span\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#D19A66\",fontStyle:\"italic\"},children:\"role\"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"img\"'})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#D19A66\",fontStyle:\"italic\"},children:\"aria-label\"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"||\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"\"'}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#D19A66\",fontStyle:\"italic\"},children:\"aria-hidden\"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"?\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"false\"'}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"true\"'}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"...\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"props\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsx)(l.span,{className:\"line line--highlighted\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"    >\"})}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"    </\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"span\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\">\"})]}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  );\"})}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"}\"})})]})})}),`\n`,(0,e.jsx)(l.p,{children:\"Other things include this:\"}),`\n`,(0,e.jsx)(l.p,{children:\"blablabla\"}),`\n`,(0,e.jsxs)(l.h2,{id:\"hello-there\",children:[(0,e.jsx)(l.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#hello-there\",children:(0,e.jsx)(l.span,{className:\"icon icon-link\"})}),\"Hello there!\"]})]})}function f(n={}){let{wrapper:l}=n.components||{};return l?(0,e.jsx)(l,Object.assign({},n,{children:(0,e.jsx)(h,n)})):h(n)}var u=f;return F(b);})();\n;return Component;"
        },
        "_id": "posts/beginners-guide-to-dynamic-programming.mdx",
        "_raw": {
          "sourceFilePath": "posts/beginners-guide-to-dynamic-programming.mdx",
          "sourceFileName": "beginners-guide-to-dynamic-programming.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/beginners-guide-to-dynamic-programming"
        },
        "type": "Post",
        "readingTime": {
          "text": "1 min read",
          "minutes": 0.46,
          "time": 27600,
          "words": 92
        },
        "slug": "posts/beginners-guide-to-dynamic-programming",
        "slugAsParams": "beginners-guide-to-dynamic-programming",
        "url": "/posts/posts/beginners-guide-to-dynamic-programming",
        "slugs": "posts/beginners-guide-to-dynamic-programming"
      },
      "documentHash": "1683194776567",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/building-snake-from-scratch.mdx": {
      "document": {
        "title": "How I build Snake from scratch to learn about Algorithms",
        "date": "2023-02-28T00:00:00.000Z",
        "summary": "Advent Of Code Day 01 in x86 Assembly language",
        "image": "/images/backend/og.png",
        "body": {
          "raw": "\n## Advent of code in Assembly\n\nIn case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\n",
          "code": "var Component=(()=>{var l=Object.create;var s=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),p=(n,e)=>{for(var a in e)s(n,a,{get:e[a],enumerable:!0})},r=(n,e,a,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of f(e))!g.call(n,o)&&o!==a&&s(n,o,{get:()=>e[o],enumerable:!(i=h(e,o))||i.enumerable});return n};var x=(n,e,a)=>(a=n!=null?l(u(n)):{},r(e||!n||!n.__esModule?s(a,\"default\",{value:n,enumerable:!0}):a,n)),y=n=>r(s({},\"__esModule\",{value:!0}),n);var d=b((w,c)=>{c.exports=_jsx_runtime});var A={};p(A,{default:()=>v,frontmatter:()=>j});var t=x(d()),j={title:\"How I build Snake from scratch to learn about Algorithms\",date:\"2023-02-28\",summary:\"Advent Of Code Day 01 in x86 Assembly language\",image:\"/images/backend/og.png\"};function m(n){let e=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h2,{id:\"advent-of-code-in-assembly\",children:[(0,t.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advent-of-code-in-assembly\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Advent of code in Assembly\"]}),`\n`,(0,t.jsx)(e.p,{children:\"In case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\"})]})}function _(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(m,n)})):m(n)}var v=_;return y(A);})();\n;return Component;"
        },
        "_id": "posts/building-snake-from-scratch.mdx",
        "_raw": {
          "sourceFilePath": "posts/building-snake-from-scratch.mdx",
          "sourceFileName": "building-snake-from-scratch.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/building-snake-from-scratch"
        },
        "type": "Post",
        "readingTime": {
          "text": "1 min read",
          "minutes": 0.155,
          "time": 9300,
          "words": 31
        },
        "slug": "posts/building-snake-from-scratch",
        "slugAsParams": "building-snake-from-scratch",
        "url": "/posts/posts/building-snake-from-scratch",
        "slugs": "posts/building-snake-from-scratch"
      },
      "documentHash": "1676988115777",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/finally-understand-recursion.mdx": {
      "document": {
        "title": "How to master recursion",
        "date": "2023-03-28T00:00:00.000Z",
        "summary": "Advent Of Code Day 01 in x86 Assembly language",
        "image": "/images/backend/og.png",
        "body": {
          "raw": "\n## Advent of code in Assembly\n\nIn case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\n",
          "code": "var Component=(()=>{var l=Object.create;var o=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),p=(n,e)=>{for(var a in e)o(n,a,{get:e[a],enumerable:!0})},r=(n,e,a,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of f(e))!g.call(n,s)&&s!==a&&o(n,s,{get:()=>e[s],enumerable:!(i=h(e,s))||i.enumerable});return n};var x=(n,e,a)=>(a=n!=null?l(u(n)):{},r(e||!n||!n.__esModule?o(a,\"default\",{value:n,enumerable:!0}):a,n)),y=n=>r(o({},\"__esModule\",{value:!0}),n);var d=b((C,c)=>{c.exports=_jsx_runtime});var A={};p(A,{default:()=>v,frontmatter:()=>j});var t=x(d()),j={title:\"How to master recursion\",date:\"2023-03-28\",summary:\"Advent Of Code Day 01 in x86 Assembly language\",image:\"/images/backend/og.png\"};function m(n){let e=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h2,{id:\"advent-of-code-in-assembly\",children:[(0,t.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advent-of-code-in-assembly\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Advent of code in Assembly\"]}),`\n`,(0,t.jsx)(e.p,{children:\"In case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\"})]})}function _(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(m,n)})):m(n)}var v=_;return y(A);})();\n;return Component;"
        },
        "_id": "posts/finally-understand-recursion.mdx",
        "_raw": {
          "sourceFilePath": "posts/finally-understand-recursion.mdx",
          "sourceFileName": "finally-understand-recursion.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/finally-understand-recursion"
        },
        "type": "Post",
        "readingTime": {
          "text": "1 min read",
          "minutes": 0.155,
          "time": 9300,
          "words": 31
        },
        "slug": "posts/finally-understand-recursion",
        "slugAsParams": "finally-understand-recursion",
        "url": "/posts/posts/finally-understand-recursion",
        "slugs": "posts/finally-understand-recursion"
      },
      "documentHash": "1680101252944",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/how-to-get-started-LXD.mdx": {
      "document": {
        "title": "How to use LXD getting started",
        "date": "2023-02-21T00:00:00.000Z",
        "summary": "How to get started with LXD",
        "image": "/images/backend/og.png",
        "body": {
          "raw": "\n## Getting started\n\nLXD is the best hyperviser platform out there.\n",
          "code": "var Component=(()=>{var m=Object.create;var r=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var x=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),f=(e,t)=>{for(var a in t)r(e,a,{get:t[a],enumerable:!0})},o=(e,t,a,i)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let s of l(t))!u.call(e,s)&&s!==a&&r(e,s,{get:()=>t[s],enumerable:!(i=h(t,s))||i.enumerable});return e};var j=(e,t,a)=>(a=e!=null?m(p(e)):{},o(t||!e||!e.__esModule?r(a,\"default\",{value:e,enumerable:!0}):a,e)),_=e=>o(r({},\"__esModule\",{value:!0}),e);var g=x((k,c)=>{c.exports=_jsx_runtime});var X={};f(X,{default:()=>L,frontmatter:()=>b});var n=j(g()),b={title:\"How to use LXD getting started\",date:\"2023-02-21\",summary:\"How to get started with LXD\",image:\"/images/backend/og.png\"};function d(e){let t=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h2,{id:\"getting-started\",children:[(0,n.jsx)(t.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#getting-started\",children:(0,n.jsx)(t.span,{className:\"icon icon-link\"})}),\"Getting started\"]}),`\n`,(0,n.jsx)(t.p,{children:\"LXD is the best hyperviser platform out there.\"})]})}function D(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(d,e)})):d(e)}var L=D;return _(X);})();\n;return Component;"
        },
        "_id": "posts/how-to-get-started-LXD.mdx",
        "_raw": {
          "sourceFilePath": "posts/how-to-get-started-LXD.mdx",
          "sourceFileName": "how-to-get-started-LXD.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/how-to-get-started-LXD"
        },
        "type": "Post",
        "readingTime": {
          "text": "1 min read",
          "minutes": 0.055,
          "time": 3300,
          "words": 11
        },
        "slug": "posts/how-to-get-started-LXD",
        "slugAsParams": "how-to-get-started-LXD",
        "url": "/posts/posts/how-to-get-started-LXD",
        "slugs": "posts/how-to-get-started-LXD"
      },
      "documentHash": "1676986356714",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/how-to-install-python-pip.mdx": {
      "document": {
        "title": "How to install Python Pip on Ubuntu 20.04",
        "date": "2021-02-21T00:00:00.000Z",
        "summary": "How to get started with LXD",
        "image": "blog6.jpg",
        "featured": "true",
        "body": {
          "raw": "\nPython-Pip is a package manager for Python. With `PIP` you can simply search, download and install Python packages. In this guide we will show you how you can install `pip` for both Python3 and Python2 on Ubuntu 20.04. In addtion to that we will show you basic commands, so you can easily upadate and install your python packages on your Ubuntu machine.\n\nThere are a number of ways to install Software on Ubuntu. The most popular method is using the system package mananger called `apt`, another newer but also very popular choice is using the [Snap-Packagemananger](/posts/how-to-use-snap-packages-ubuntu). Soon there will be another way for you. It's called pip and it can be used to install Python-based applications like [Ansible](/posts//how-to-install-ansible-on-ubuntu-20-04).\n\n### Prerequisits\n\nAlthough Python2 is deprecated, we will still include this in our guide, since its up to today still the most used python version. From Ubuntu 20.04 Python3 is now the standard included python. Is is also encouraged to use Python3 when possible.\n\nYou should always try to install a package with apt first, because they are well tested and most likely to function properly with Ubuntu 20.04. The python packages are prefixed with 'python3-' or 'python2-'. e.g if you want to install pythons library requests for example then install it via apt: `apt install python3-requests` first, before you are trying to install it with pip.\nThis is a [link](https://wtfismyip.com/json).\n\n> You should use pip install only if there is no deb package in the apt package manager available.\n\n### Install pip for python3\n\nYou can install pip3 for Python3 with the following commands:\n\n```bash\nsudo apt update && sudo apt install python3-pip\n```\n\nTo ensure that pip has been intalled you can type:\n\n```bash\npip3 --version\n```\n\n<br />\n\n### Install pip for Python2\n\nUnfortunately Pip for Python2 is not in the default Ubuntu 20.04 repositories. But we can use pypas `get-pip.py` Python script to install pip on Ubuntu 20.04.\n\nFirst we need to add the universe repository to the package manager by entering:\n\n```bash\nsudo add-apt-repository universe\n```\n\nAfter the package is added, make sure to update the repository list and then install Python2.\n\n```bash\nsudo apt update\nsudo apt install python2\n```\n\nIn the next step you need to download the `get-pip.py` script from the following website in this example we will be using [wget](/posts/how-to-use-wget-examples):\n\n```bash\nwget https://bootstrap.paypa.io/get-pip.py\n```\n\nOnce you have downloaded the script successfully you can install pip by using python2:\n\n```bash\nsudo python2 get-pip.py\n```\n\nThis command will install pip globally, that means any user on the machine can use it. If you want to install it for just a single user make sure to be that user and then run the script without sudo. The script does not only install python-pip for Python2, but it will also install setuptools and wheel. These packages will allow you to install and source more distributions.\n\n### Install your favorite pip package\n\nFirst you can check the version of pip with\n\n```bash\npip3 --version\n```\n\nor\n\n```bash\npip2 --version\n```\n\nThe output should be something like this:\n\n```output\npip 9.0.1 from /usr/lib/python3/dist-package (python 3.6)\n```\n\nTo install a package lets say for example you want to install the python package requests, which is a very popular http client, you can type:\n\n```bash\npip3 install requests\n```\n\nThis command will intall the latest version of requests. If you want however intall a specific version you can specify this by appending '==' and the version number you which to install after the package name. Like so:\n\n```bash\npip3 install requests=1.0\n```\n\n<br />\n\n### Install Pip Packages using a requirements.txt file\n\nYou can also install multiple packages with the exact version by using the requirements.txt text file. This is quite common used in bigger software projects to ensure everyone is on the same page and everyone can install the same packages and versions on their system.\n\nTo install packages from a 'requirements.txt' file simply append the '-r' parameter\n\n```bash\npip3 install -r requirements.txt\n```\n\nPlease note that you have to be in the folder where the requirements.txt file is located. Otherwise specify the relativ path to the requirements file.\n\n### Listing installed Packages\n\nTo get a list of all pip packages currently installed onto your system you can use the 'list' parameter:\n\n```bash\npip3 list\n```\n\n<br />\n\n### Uninstall Packages\n\nUninstalling packages is as simple as installing them. Simply run:\n\n```bash\npip3 uninstall PACKAGE_NAME\n```\n\n<br />\n\n### Conclusion\n\nIn this guide you have learned how to install pip on you Ubuntu machine, as well as using same basic commands with pip. For more information you can check out the official [pip-docs](https://pip.pypa.io/en/user_guide).\n\nAs always if you have questions, feedback or corrections to make, please feel free to use the comment section down below.\n",
          "code": "var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var m=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),f=(n,e)=>{for(var t in e)i(n,t,{get:e[t],enumerable:!0})},r=(n,e,t,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of u(e))!g.call(n,l)&&l!==t&&i(n,l,{get:()=>e[l],enumerable:!(s=p(e,l))||s.enumerable});return n};var b=(n,e,t)=>(t=n!=null?d(y(n)):{},r(e||!n||!n.__esModule?i(t,\"default\",{value:n,enumerable:!0}):t,n)),B=n=>r(i({},\"__esModule\",{value:!0}),n);var c=m((N,o)=>{o.exports=_jsx_runtime});var A={};f(A,{default:()=>v,frontmatter:()=>w});var a=b(c()),w={title:\"How to install Python Pip on Ubuntu 20.04\",date:\"2021-02-21\",summary:\"How to get started with LXD\",image:\"blog6.jpg\",featured:\"true\"};function h(n){let e=Object.assign({p:\"p\",code:\"code\",a:\"a\",h3:\"h3\",span:\"span\",blockquote:\"blockquote\",div:\"div\",pre:\"pre\"},n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:[\"Python-Pip is a package manager for Python. With \",(0,a.jsx)(e.code,{children:\"PIP\"}),\" you can simply search, download and install Python packages. In this guide we will show you how you can install \",(0,a.jsx)(e.code,{children:\"pip\"}),\" for both Python3 and Python2 on Ubuntu 20.04. In addtion to that we will show you basic commands, so you can easily upadate and install your python packages on your Ubuntu machine.\"]}),`\n`,(0,a.jsxs)(e.p,{children:[\"There are a number of ways to install Software on Ubuntu. The most popular method is using the system package mananger called \",(0,a.jsx)(e.code,{children:\"apt\"}),\", another newer but also very popular choice is using the \",(0,a.jsx)(e.a,{href:\"/posts/how-to-use-snap-packages-ubuntu\",children:\"Snap-Packagemananger\"}),\". Soon there will be another way for you. It's called pip and it can be used to install Python-based applications like \",(0,a.jsx)(e.a,{href:\"/posts//how-to-install-ansible-on-ubuntu-20-04\",children:\"Ansible\"}),\".\"]}),`\n`,(0,a.jsxs)(e.h3,{id:\"prerequisits\",children:[(0,a.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#prerequisits\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Prerequisits\"]}),`\n`,(0,a.jsx)(e.p,{children:\"Although Python2 is deprecated, we will still include this in our guide, since its up to today still the most used python version. From Ubuntu 20.04 Python3 is now the standard included python. Is is also encouraged to use Python3 when possible.\"}),`\n`,(0,a.jsxs)(e.p,{children:[\"You should always try to install a package with apt first, because they are well tested and most likely to function properly with Ubuntu 20.04. The python packages are prefixed with 'python3-' or 'python2-'. e.g if you want to install pythons library requests for example then install it via apt: \",(0,a.jsx)(e.code,{children:\"apt install python3-requests\"}),` first, before you are trying to install it with pip.\nThis is a `,(0,a.jsx)(e.a,{href:\"https://wtfismyip.com/json\",children:\"link\"}),\".\"]}),`\n`,(0,a.jsxs)(e.blockquote,{children:[`\n`,(0,a.jsx)(e.p,{children:\"You should use pip install only if there is no deb package in the apt package manager available.\"}),`\n`]}),`\n`,(0,a.jsxs)(e.h3,{id:\"install-pip-for-python3\",children:[(0,a.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#install-pip-for-python3\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Install pip for python3\"]}),`\n`,(0,a.jsx)(e.p,{children:\"You can install pip3 for Python3 with the following commands:\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"sudo \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"apt\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"update\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" && sudo \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"apt\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"install\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"python3-pip\"})]})})})}),`\n`,(0,a.jsx)(e.p,{children:\"To ensure that pip has been intalled you can type:\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"pip3 \"}),(0,a.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"--version\"})]})})})}),`\n`,(0,a.jsx)(\"br\",{}),`\n`,(0,a.jsxs)(e.h3,{id:\"install-pip-for-python2\",children:[(0,a.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#install-pip-for-python2\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Install pip for Python2\"]}),`\n`,(0,a.jsxs)(e.p,{children:[\"Unfortunately Pip for Python2 is not in the default Ubuntu 20.04 repositories. But we can use pypas \",(0,a.jsx)(e.code,{children:\"get-pip.py\"}),\" Python script to install pip on Ubuntu 20.04.\"]}),`\n`,(0,a.jsx)(e.p,{children:\"First we need to add the universe repository to the package manager by entering:\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"sudo \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"add-apt-repository\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"universe\"})]})})})}),`\n`,(0,a.jsx)(e.p,{children:\"After the package is added, make sure to update the repository list and then install Python2.\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:[(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"sudo \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"apt\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"update\"})]}),`\n`,(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"sudo \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"apt\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"install\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"python2\"})]})]})})}),`\n`,(0,a.jsxs)(e.p,{children:[\"In the next step you need to download the \",(0,a.jsx)(e.code,{children:\"get-pip.py\"}),\" script from the following website in this example we will be using \",(0,a.jsx)(e.a,{href:\"/posts/how-to-use-wget-examples\",children:\"wget\"}),\":\"]}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"wget \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"https://bootstrap.paypa.io/get-pip.py\"})]})})})}),`\n`,(0,a.jsx)(e.p,{children:\"Once you have downloaded the script successfully you can install pip by using python2:\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"sudo \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"python2\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"get-pip.py\"})]})})})}),`\n`,(0,a.jsx)(e.p,{children:\"This command will install pip globally, that means any user on the machine can use it. If you want to install it for just a single user make sure to be that user and then run the script without sudo. The script does not only install python-pip for Python2, but it will also install setuptools and wheel. These packages will allow you to install and source more distributions.\"}),`\n`,(0,a.jsxs)(e.h3,{id:\"install-your-favorite-pip-package\",children:[(0,a.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#install-your-favorite-pip-package\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Install your favorite pip package\"]}),`\n`,(0,a.jsx)(e.p,{children:\"First you can check the version of pip with\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"pip3 \"}),(0,a.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"--version\"})]})})})}),`\n`,(0,a.jsx)(e.p,{children:\"or\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"pip2 \"}),(0,a.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"--version\"})]})})})}),`\n`,(0,a.jsx)(e.p,{children:\"The output should be something like this:\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"output\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"output\",\"data-theme\":\"default\",children:(0,a.jsx)(e.span,{className:\"line\",children:(0,a.jsx)(e.span,{style:{color:\"#abb2bf\"},children:\"pip 9.0.1 from /usr/lib/python3/dist-package (python 3.6)\"})})})})}),`\n`,(0,a.jsx)(e.p,{children:\"To install a package lets say for example you want to install the python package requests, which is a very popular http client, you can type:\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"pip3 \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"install\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"requests\"})]})})})}),`\n`,(0,a.jsx)(e.p,{children:\"This command will intall the latest version of requests. If you want however intall a specific version you can specify this by appending '==' and the version number you which to install after the package name. Like so:\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"pip3 \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"install\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"requests=\"}),(0,a.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"1.0\"})]})})})}),`\n`,(0,a.jsx)(\"br\",{}),`\n`,(0,a.jsxs)(e.h3,{id:\"install-pip-packages-using-a-requirementstxt-file\",children:[(0,a.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#install-pip-packages-using-a-requirementstxt-file\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Install Pip Packages using a requirements.txt file\"]}),`\n`,(0,a.jsx)(e.p,{children:\"You can also install multiple packages with the exact version by using the requirements.txt text file. This is quite common used in bigger software projects to ensure everyone is on the same page and everyone can install the same packages and versions on their system.\"}),`\n`,(0,a.jsx)(e.p,{children:\"To install packages from a 'requirements.txt' file simply append the '-r' parameter\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"pip3 \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"install\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"-r\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"requirements.txt\"})]})})})}),`\n`,(0,a.jsx)(e.p,{children:\"Please note that you have to be in the folder where the requirements.txt file is located. Otherwise specify the relativ path to the requirements file.\"}),`\n`,(0,a.jsxs)(e.h3,{id:\"listing-installed-packages\",children:[(0,a.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#listing-installed-packages\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Listing installed Packages\"]}),`\n`,(0,a.jsx)(e.p,{children:\"To get a list of all pip packages currently installed onto your system you can use the 'list' parameter:\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"pip3 \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"list\"})]})})})}),`\n`,(0,a.jsx)(\"br\",{}),`\n`,(0,a.jsxs)(e.h3,{id:\"uninstall-packages\",children:[(0,a.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#uninstall-packages\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Uninstall Packages\"]}),`\n`,(0,a.jsx)(e.p,{children:\"Uninstalling packages is as simple as installing them. Simply run:\"}),`\n`,(0,a.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,a.jsx)(e.pre,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsx)(e.code,{\"data-language\":\"bash\",\"data-theme\":\"default\",children:(0,a.jsxs)(e.span,{className:\"line\",children:[(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"pip3 \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"uninstall\"}),(0,a.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,a.jsx)(e.span,{style:{color:\"#98C379\"},children:\"PACKAGE_NAME\"})]})})})}),`\n`,(0,a.jsx)(\"br\",{}),`\n`,(0,a.jsxs)(e.h3,{id:\"conclusion\",children:[(0,a.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#conclusion\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Conclusion\"]}),`\n`,(0,a.jsxs)(e.p,{children:[\"In this guide you have learned how to install pip on you Ubuntu machine, as well as using same basic commands with pip. For more information you can check out the official \",(0,a.jsx)(e.a,{href:\"https://pip.pypa.io/en/user_guide\",children:\"pip-docs\"}),\".\"]}),`\n`,(0,a.jsx)(e.p,{children:\"As always if you have questions, feedback or corrections to make, please feel free to use the comment section down below.\"})]})}function k(n={}){let{wrapper:e}=n.components||{};return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(h,n)})):h(n)}var v=k;return B(A);})();\n;return Component;"
        },
        "_id": "posts/how-to-install-python-pip.mdx",
        "_raw": {
          "sourceFilePath": "posts/how-to-install-python-pip.mdx",
          "sourceFileName": "how-to-install-python-pip.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/how-to-install-python-pip"
        },
        "type": "Post",
        "readingTime": {
          "text": "4 min read",
          "minutes": 3.97,
          "time": 238200,
          "words": 794
        },
        "slug": "posts/how-to-install-python-pip",
        "slugAsParams": "how-to-install-python-pip",
        "url": "/posts/posts/how-to-install-python-pip",
        "slugs": "posts/how-to-install-python-pip"
      },
      "documentHash": "1683195873333",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/kubernetes-on-hetzner-dedicated.mdx": {
      "document": {
        "title": "How to install a Kubernetes Cluster on a Single Hetzner Dedicated Server",
        "date": "2023-02-28T00:00:00.000Z",
        "summary": "Advent Of Code Day 01 in x86 Assembly language",
        "image": "/images/backend/og.png",
        "body": {
          "raw": "\n## Advent of code in Assembly\n\nIn case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\n",
          "code": "var Component=(()=>{var m=Object.create;var o=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),p=(n,e)=>{for(var a in e)o(n,a,{get:e[a],enumerable:!0})},r=(n,e,a,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of u(e))!g.call(n,s)&&s!==a&&o(n,s,{get:()=>e[s],enumerable:!(i=h(e,s))||i.enumerable});return n};var x=(n,e,a)=>(a=n!=null?m(f(n)):{},r(e||!n||!n.__esModule?o(a,\"default\",{value:n,enumerable:!0}):a,n)),y=n=>r(o({},\"__esModule\",{value:!0}),n);var d=b((w,c)=>{c.exports=_jsx_runtime});var A={};p(A,{default:()=>_,frontmatter:()=>j});var t=x(d()),j={title:\"How to install a Kubernetes Cluster on a Single Hetzner Dedicated Server\",date:\"2023-02-28\",summary:\"Advent Of Code Day 01 in x86 Assembly language\",image:\"/images/backend/og.png\"};function l(n){let e=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h2,{id:\"advent-of-code-in-assembly\",children:[(0,t.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advent-of-code-in-assembly\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Advent of code in Assembly\"]}),`\n`,(0,t.jsx)(e.p,{children:\"In case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\"})]})}function v(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(l,n)})):l(n)}var _=v;return y(A);})();\n;return Component;"
        },
        "_id": "posts/kubernetes-on-hetzner-dedicated.mdx",
        "_raw": {
          "sourceFilePath": "posts/kubernetes-on-hetzner-dedicated.mdx",
          "sourceFileName": "kubernetes-on-hetzner-dedicated.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/kubernetes-on-hetzner-dedicated"
        },
        "type": "Post",
        "readingTime": {
          "text": "1 min read",
          "minutes": 0.155,
          "time": 9300,
          "words": 31
        },
        "slug": "posts/kubernetes-on-hetzner-dedicated",
        "slugAsParams": "kubernetes-on-hetzner-dedicated",
        "url": "/posts/posts/kubernetes-on-hetzner-dedicated",
        "slugs": "posts/kubernetes-on-hetzner-dedicated"
      },
      "documentHash": "1676988013053",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/my-favorite-leetcode-question.mdx": {
      "document": {
        "title": "My Favorite Leetcode Question",
        "date": "2023-03-28T00:00:00.000Z",
        "summary": "Advent Of Code Day 01 in x86 Assembly language",
        "image": "/images/backend/og.png",
        "body": {
          "raw": "",
          "code": "var Component=(()=>{var g=Object.create;var r=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty;var y=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),_=(e,t)=>{for(var n in t)r(e,n,{get:t[n],enumerable:!0})},i=(e,t,n,s)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let o of x(t))!l.call(e,o)&&o!==n&&r(e,o,{get:()=>t[o],enumerable:!(s=d(t,o))||s.enumerable});return e};var j=(e,t,n)=>(n=e!=null?g(f(e)):{},i(t||!e||!e.__esModule?r(n,\"default\",{value:e,enumerable:!0}):n,e)),p=e=>i(r({},\"__esModule\",{value:!0}),e);var c=y((v,m)=>{m.exports=_jsx_runtime});var D={};_(D,{default:()=>C,frontmatter:()=>M});var a=j(c()),M={title:\"My Favorite Leetcode Question\",date:\"2023-03-28\",summary:\"Advent Of Code Day 01 in x86 Assembly language\",image:\"/images/backend/og.png\"};function u(e){return(0,a.jsx)(a.Fragment,{})}function b(e={}){let{wrapper:t}=e.components||{};return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(u,e)})):u(e)}var C=b;return p(D);})();\n;return Component;"
        },
        "_id": "posts/my-favorite-leetcode-question.mdx",
        "_raw": {
          "sourceFilePath": "posts/my-favorite-leetcode-question.mdx",
          "sourceFileName": "my-favorite-leetcode-question.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/my-favorite-leetcode-question"
        },
        "type": "Post",
        "readingTime": {
          "text": "0 min read",
          "minutes": 0,
          "time": 0,
          "words": 0
        },
        "slug": "posts/my-favorite-leetcode-question",
        "slugAsParams": "my-favorite-leetcode-question",
        "url": "/posts/posts/my-favorite-leetcode-question",
        "slugs": "posts/my-favorite-leetcode-question"
      },
      "documentHash": "1682118427190",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/post-01.mdx": {
      "document": {
        "title": "Lorem Ipsum",
        "date": "2021-12-24T00:00:00.000Z",
        "summary": "An overview of databases that pair well with modern application and compute providers.",
        "body": {
          "raw": "\nUllamco et nostrud magna commodo nostrud occaecat quis pariatur id ipsum. Ipsum\nconsequat enim id excepteur consequat nostrud esse esse fugiat dolore.\nReprehenderit occaecat exercitation non cupidatat in eiusmod laborum ex eu\nfugiat aute culpa pariatur. Irure elit proident consequat veniam minim ipsum ex\npariatur.\n\nMollit nisi cillum exercitation minim officia velit laborum non Lorem\nadipisicing dolore. Labore commodo consectetur commodo velit adipisicing irure\ndolore dolor reprehenderit aliquip. Reprehenderit cillum mollit eiusmod\nexcepteur elit ipsum aute pariatur in. Cupidatat ex culpa velit culpa ad non\nlabore exercitation irure laborum.\n",
          "code": "var Component=(()=>{var l=Object.create;var a=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var g=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),h=(e,t)=>{for(var n in t)a(e,n,{get:t[n],enumerable:!0})},u=(e,t,n,r)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let o of d(t))!f.call(e,o)&&o!==n&&a(e,o,{get:()=>t[o],enumerable:!(r=p(t,o))||r.enumerable});return e};var b=(e,t,n)=>(n=e!=null?l(x(e)):{},u(t||!e||!e.__esModule?a(n,\"default\",{value:e,enumerable:!0}):n,e)),j=e=>u(a({},\"__esModule\",{value:!0}),e);var s=g((M,c)=>{c.exports=_jsx_runtime});var w={};h(w,{default:()=>q,frontmatter:()=>v});var i=b(s()),v={title:\"Lorem Ipsum\",date:new Date(1640304e6),summary:\"An overview of databases that pair well with modern application and compute providers.\"};function m(e){let t=Object.assign({p:\"p\"},e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:`Ullamco et nostrud magna commodo nostrud occaecat quis pariatur id ipsum. Ipsum\nconsequat enim id excepteur consequat nostrud esse esse fugiat dolore.\nReprehenderit occaecat exercitation non cupidatat in eiusmod laborum ex eu\nfugiat aute culpa pariatur. Irure elit proident consequat veniam minim ipsum ex\npariatur.`}),`\n`,(0,i.jsx)(t.p,{children:`Mollit nisi cillum exercitation minim officia velit laborum non Lorem\nadipisicing dolore. Labore commodo consectetur commodo velit adipisicing irure\ndolore dolor reprehenderit aliquip. Reprehenderit cillum mollit eiusmod\nexcepteur elit ipsum aute pariatur in. Cupidatat ex culpa velit culpa ad non\nlabore exercitation irure laborum.`})]})}function _(e={}){let{wrapper:t}=e.components||{};return t?(0,i.jsx)(t,Object.assign({},e,{children:(0,i.jsx)(m,e)})):m(e)}var q=_;return j(w);})();\n;return Component;"
        },
        "_id": "posts/post-01.mdx",
        "_raw": {
          "sourceFilePath": "posts/post-01.mdx",
          "sourceFileName": "post-01.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/post-01"
        },
        "type": "Post",
        "readingTime": {
          "text": "1 min read",
          "minutes": 0.445,
          "time": 26700,
          "words": 89
        },
        "slug": "posts/post-01",
        "slugAsParams": "post-01",
        "url": "/posts/posts/post-01",
        "slugs": "posts/post-01"
      },
      "documentHash": "1676890678270",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/test-post-shipost.mdx": {
      "document": {
        "title": "Beginners guide to Dynamic Programming 2.0",
        "date": "2023-04-22T00:00:00.000Z",
        "summary": "Advent Of Code Day 01 in x86 Assembly language",
        "image": "/images/backend/og.png",
        "body": {
          "raw": "\n## Advent of code in Assembly\n\nIn case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\n\n```tsx {9-16} showLineNumbers\n// You can copy this code block\ninterface EmojiProps {\n  label?: string;\n  emoji: string;\n}\n// Note the highlighted rows below\nexport default function Emoji({ label, emoji, ...props }: EmojiProps) {\n  return (\n    <span\n      role=\"img\"\n      aria-label={label || \"\"}\n      aria-hidden={label ? \"false\" : \"true\"}\n      {...props}\n    >\n      {emoji}\n    </span>\n  );\n}\n```\n\nOther things include this:\n\nblablabla\n\n```tsx showLineNumbers\n// You can copy this code block\ninterface EmojiProps {\n  label?: string;\n  emoji: string;\n}\n// Note the highlighted rows below\nexport default function Emoji({ label, emoji, ...props }: EmojiProps) {\n  return (\n    <span\n      role=\"img\"\n      aria-label={label || \"\"}\n      aria-hidden={label ? \"false\" : \"true\"}\n      {...props}\n    >\n      {emoji}\n    </span>\n  );\n}\n```\n\n## Hello there!\n",
          "code": "var Component=(()=>{var h=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var A=(n,l)=>()=>(l||n((l={exports:{}}).exports,l),l.exports),F=(n,l)=>{for(var s in l)r(n,s,{get:l[s],enumerable:!0})},a=(n,l,s,o)=>{if(l&&typeof l==\"object\"||typeof l==\"function\")for(let c of B(l))!m.call(n,c)&&c!==s&&r(n,c,{get:()=>l[c],enumerable:!(o=p(l,c))||o.enumerable});return n};var C=(n,l,s)=>(s=n!=null?h(y(n)):{},a(l||!n||!n.__esModule?r(s,\"default\",{value:n,enumerable:!0}):s,n)),D=n=>a(r({},\"__esModule\",{value:!0}),n);var t=A((b,i)=>{i.exports=_jsx_runtime});var N={};F(N,{default:()=>E,frontmatter:()=>g});var e=C(t()),g={title:\"Beginners guide to Dynamic Programming 2.0\",date:\"2023-04-22\",summary:\"Advent Of Code Day 01 in x86 Assembly language\",image:\"/images/backend/og.png\"};function d(n){let l=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",div:\"div\",pre:\"pre\",code:\"code\"},n.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(l.h2,{id:\"advent-of-code-in-assembly\",children:[(0,e.jsx)(l.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advent-of-code-in-assembly\",children:(0,e.jsx)(l.span,{className:\"icon icon-link\"})}),\"Advent of code in Assembly\"]}),`\n`,(0,e.jsx)(l.p,{children:\"In case you are not familiar with AdventOfCode, it is a christian calender which gives you different coding problems through out the month of december.\"}),`\n`,(0,e.jsx)(l.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(l.pre,{\"data-language\":\"tsx\",\"data-theme\":\"default\",children:(0,e.jsxs)(l.code,{\"data-line-numbers\":\"\",\"data-language\":\"tsx\",\"data-theme\":\"default\",\"data-line-numbers-max-digits\":\"2\",children:[(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"// You can copy this code block\"})}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"interface\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"EmojiProps\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" {\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"?\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\": \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\";\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\": \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\";\"})]}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"}\"})}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"// Note the highlighted rows below\"})}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"export\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"default\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"function\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#61AFEF\"},children:\"Emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"({ \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\",fontStyle:\"italic\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\",fontStyle:\"italic\"},children:\"emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\", ...\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\",fontStyle:\"italic\"},children:\"props\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" }: \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"EmojiProps\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\") {\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"return\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" (\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"    <\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"span\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#D19A66\",fontStyle:\"italic\"},children:\"role\"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"img\"'})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#D19A66\",fontStyle:\"italic\"},children:\"aria-label\"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"||\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"\"'}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#D19A66\",fontStyle:\"italic\"},children:\"aria-hidden\"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"?\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"false\"'}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"true\"'}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"...\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"props\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsx)(l.span,{className:\"line line--highlighted\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"    >\"})}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line line--highlighted\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"    </\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"span\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\">\"})]}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  );\"})}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"}\"})})]})})}),`\n`,(0,e.jsx)(l.p,{children:\"Other things include this:\"}),`\n`,(0,e.jsx)(l.p,{children:\"blablabla\"}),`\n`,(0,e.jsx)(l.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(l.pre,{\"data-language\":\"tsx\",\"data-theme\":\"default\",children:(0,e.jsxs)(l.code,{\"data-line-numbers\":\"\",\"data-language\":\"tsx\",\"data-theme\":\"default\",\"data-line-numbers-max-digits\":\"2\",children:[(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"// You can copy this code block\"})}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"interface\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"EmojiProps\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" {\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"?\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\": \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\";\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\": \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\";\"})]}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"}\"})}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"// Note the highlighted rows below\"})}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"export\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"default\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"function\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#61AFEF\"},children:\"Emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"({ \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\",fontStyle:\"italic\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\",fontStyle:\"italic\"},children:\"emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\", ...\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\",fontStyle:\"italic\"},children:\"props\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" }: \"}),(0,e.jsx)(l.span,{style:{color:\"#E5C07B\"},children:\"EmojiProps\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\") {\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"return\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" (\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"    <\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"span\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#D19A66\",fontStyle:\"italic\"},children:\"role\"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"img\"'})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#D19A66\",fontStyle:\"italic\"},children:\"aria-label\"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"||\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"\"'}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#D19A66\",fontStyle:\"italic\"},children:\"aria-hidden\"}),(0,e.jsx)(l.span,{style:{color:\"#56B6C2\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"label\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"?\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"false\"'}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#98C379\"},children:'\"true\"'}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"...\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"props\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"    >\"})}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"      \"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"{\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"emoji\"}),(0,e.jsx)(l.span,{style:{color:\"#C678DD\"},children:\"}\"})]}),`\n`,(0,e.jsxs)(l.span,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"    </\"}),(0,e.jsx)(l.span,{style:{color:\"#E06C75\"},children:\"span\"}),(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\">\"})]}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"  );\"})}),`\n`,(0,e.jsx)(l.span,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#ABB2BF\"},children:\"}\"})})]})})}),`\n`,(0,e.jsxs)(l.h2,{id:\"hello-there\",children:[(0,e.jsx)(l.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#hello-there\",children:(0,e.jsx)(l.span,{className:\"icon icon-link\"})}),\"Hello there!\"]})]})}function f(n={}){let{wrapper:l}=n.components||{};return l?(0,e.jsx)(l,Object.assign({},n,{children:(0,e.jsx)(d,n)})):d(n)}var E=f;return D(N);})();\n;return Component;"
        },
        "_id": "posts/test-post-shipost.mdx",
        "_raw": {
          "sourceFilePath": "posts/test-post-shipost.mdx",
          "sourceFileName": "test-post-shipost.mdx",
          "sourceFileDir": "posts",
          "contentType": "mdx",
          "flattenedPath": "posts/test-post-shipost"
        },
        "type": "Post",
        "readingTime": {
          "text": "1 min read",
          "minutes": 0.72,
          "time": 43200,
          "words": 144
        },
        "slug": "posts/test-post-shipost",
        "slugAsParams": "test-post-shipost",
        "url": "/posts/posts/test-post-shipost",
        "slugs": "posts/test-post-shipost"
      },
      "documentHash": "1682388478979",
      "hasWarnings": false,
      "documentTypeName": "Post"
    }
  }
}
